@model Models.Job


<div id="content" class="span10">

    @{
        ViewBag.Title = "Create";
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    }


    <!-- start: Content -->



    <ul class="breadcrumb">
        <li>
            <i class=""></i>
            <a href="../Home/index.html">Home</a>
            <i class=""></i>
        </li>
        <li>
            >>>>
            <a href="#">Jobs</a>
        </li>
    </ul>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


    <div class="row-fluid sortable">
        <div class="box span11">
            <div class="box-header" data-original-title>
                <h2 class="text-center"><i class="halflings-icon edit"></i><span class="break"></span>Create Job Advert</h2>
                <div class="box-icon">
                    <a href="#" class="btn-setting"><i class="halflings-icon wrench"></i></a>
                    <a href="#" class="btn-minimize"><i class="halflings-icon chevron-up"></i></a>
                    <a href="#" class="btn-close"><i class="halflings-icon remove"></i></a>
                </div>
            </div>
            <div class="box-content">
                <form class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <fieldset>

                        <p>Job Code </p>
                        <input type="text" class="text" value="" name="jobCode" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = '';}">
                        @Html.ValidationMessageFor(model => model.jobCode, "", new { @class = "text-danger" })

                        <p>Job Title </p>
                        <input type="text" class="text" value="" name="jobTitle" onfocus="this.value = '';" onblur="if (this.value == '') {this.value = '';}">
                        @Html.ValidationMessageFor(model => model.jobTitle, " ", new { @class = "text-danger" })

                        <p>Job Type</p>
                        @Html.DropDownListFor(model => model.jobType, new List<SelectListItem>
                             {
                            new SelectListItem {Text = "Full-Time", Value = "Full-Time"},
                            new SelectListItem {Text = "Part-Time", Value = "Part-Time"},
                            new SelectListItem {Text = "Internship", Value = "Internship"}
                             }, "...Select Job Type...", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.jobType, "", new { @class = "text-danger" })
                        <br /><br />

                        <p>Job Description</p>
                        @*<textarea class="cleditor" id="jobDescription" name="jobDescription" rows="3"></textarea>*@
                        @Html.EditorFor(model => model.jobDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.jobRequirements, "", new { @class = "text-danger" })

                        <p>Job Requirements</p>
                        @*<textarea class="cleditor" id="jobRequirements" name="jobRequirements" rows="3"></textarea>*@
                        @Html.EditorFor(model => model.jobRequirements, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.jobRequirements, "", new { @class = "text-danger" })

                        <p>Closing Date</p>
                        <input type="text" class="input-xlarge datepicker" id="closingDate" name="closingDate" value="">
                        @Html.ValidationMessageFor(model => model.closingDate, "", new { @class = "text-danger" })

                        <p><input type="submit" value="Create" class="btn btn-primary" /></p>

                    </fieldset>
                </form>

            </div>
        </div>

    </div>



    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>


</div>